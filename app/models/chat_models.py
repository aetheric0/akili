from pydantic import BaseModel
from typing import Literal, Union, Any


class ChatMessage(BaseModel):
    role: Literal['user', 'model']
    # The AI can return a string or a structured JSON object (for quizzes, etc.)
    text: Union[str, dict]


class UploadResponse(BaseModel):
    session_id: str
    response: Any
    tier: str
    plan_name: str
    expiry_date: str
    active_sessions: int
    document_name: str
    created_at: str
    mode: str


class ChatRequest(BaseModel):
    # Unique ID for the conversation (e.g., a UUID generated by the client)
    session_id: str | None
    message: str


class ChatResponse(BaseModel):
    session_id: str
    response: str
    # Optional: Might want to return a truncated history for debugging
    # history_length: int
